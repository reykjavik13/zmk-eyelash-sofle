#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    TD0: TD0 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD0";
        #binding-cells = <0>;
        tapping-term-ms = <150>;
        bindings = <&mt ESC DOUBLE_QUOTES>, <&kp SQT>;
    };

    TD1: TD1 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD1";
        #binding-cells = <0>;
        tapping-term-ms = <170>;
        bindings = <&mt MINUS RA(LEFT_BRACKET)>, <&kp UNDERSCORE>;
    };

    TD2: TD2 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD2";
        #binding-cells = <0>;
        bindings = <&kp EQUAL>, <&kp RA(RIGHT_BRACKET)>, <&kp PLUS>;
    };

    TD3: TD3 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD3";
        #binding-cells = <0>;
        bindings = <&kp QUESTION>, <&kp SLASH>, <&kp PIPE>;
    };

    as: as {
        compatible = "zmk,behavior-hold-tap";
        label = "Auto_Shift";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <175>;
        quick-tap-ms = <0>;
    };

    combos {
        compatible = "zmk,combos";

        C1 {
            bindings = <&M1>;
            key-positions = <1 3>;
        };

        C2 {
            bindings = <&M2>;
            key-positions = <1 2 3>;
        };

        C3 {
            bindings = <&M6>;
            key-positions = <40 41 42>;
        };
    };

    macros {
        M1: M1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N3 &kp N1 &kp N4>;
            label = "M1";
        };

        M2: M2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N2 &kp N1 &kp N0 &kp N8 &kp N8 &kp N2 &kp N2 &kp N5 &kp N5 &kp N0>;
            label = "M2";
        };

        M3: M3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(J) &kp P &kp N1 &kp N6 &kp N5 &kp N3 &kp N9 &kp N2 &kp N2>;
            label = "M3";
        };

        M4: M4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp A &kp N &kp T &kp A &kp N &kp A &kp N1 &kp N3 &kp RET>;
            label = "M4";
        };

        M5: M5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp J &kp O &kp A &kp O &kp P &kp A &kp U &kp L &kp O &kp S &kp A &kp N &kp T &kp A &kp N &kp A &kp N1 &kp N3 &kp N1 &kp N3 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "M5";
        };

        M6: M6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(DELETE))>;
            label = "M6";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&TD0              &as LS(N1) NUMBER_1         &as LS(N2) NUMBER_2  &as LS(N3) NUMBER_3             &as LS(N4) NUMBER_4  &as LS(N5) N5        &kp UP_ARROW     &as LS(N6) NUMBER_6  &as LS(N7) N7  &as LS(N8) N8  &as LS(N9) N9      &as LS(N0) N0      &kp BACKSPACE
&mt LA(CAPS) TAB  &as LS(Q) Q                 &as LS(W) W          &as LS(E) E                     &as LS(R) R          &as LS(T) T          &kp DOWN_ARROW   &as LS(Y) Y          &as LS(U) U    &as LS(I) I    &as LS(O) O        &as LS(P) P        &mt GRAVE APOS
&TD1              &as LS(A) A                 &as LS(S) S          &as LS(D) D                     &as LS(F) F          &as LS(G) G          &kp LEFT_ARROW   &as LS(H) H          &as LS(J) J    &as LS(K) K    &as LS(L) L        &as LS(SEMI) SEMI  &mt CARET TILDE
&TD2              &as LS(Z) Z                 &as LS(X) X          &as LS(C) C                     &as LS(V) V          &as LS(B) B          &kp RIGHT_ARROW  &as LS(N) N          &as LS(M) M    &kp COMMA      &kp DOT            &kp SEMICOLON      &as LEFT_SHIFT ENTER
&kp C_MUTE        &mt LCTRL LEFT_PARENTHESIS  &mt LEFT_GUI SPACE   &mt LEFT_ALT RIGHT_PARENTHESIS  &mo 1                &kp LC(BACKSPACE)    &kp PRINTSCREEN  &mt END HOME         &mo 2          &TD3           &kp LC(BACKSPACE)  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans      &trans           &trans          &M3              &M4              &M5                &mmv MOVE_UP     &kp F6            &kp F7             &kp F8                &kp F9   &kp F10  &trans
&trans      &trans           &trans          &trans           &trans           &trans             &mmv MOVE_DOWN   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH  &trans   &trans   &trans
&trans      &trans           &trans          &trans           &trans           &trans             &mmv MOVE_LEFT   &kp PG_UP         &kp PAGE_DOWN      &trans                &trans   &trans   &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI   &rgb_ug RGB_BRD    &trans                &kp F11  &kp F12  &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans            &mo 3              &trans                &trans   &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &kp F1           &kp F2           &kp F3           &kp F4  &kp F5    &bt BT_SEL 0  &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &trans    &bt BT_SEL 2  &trans  &trans  &kp F11     &kp F12    &trans       &trans
&trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans    &bt BT_SEL 3  &trans  &trans  &trans      &trans     &trans       &trans
&trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans    &bt BT_SEL 1  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans  &kp KP_NUMBER_0  &kp COMMA        &kp PERIOD       &trans  &mo 3     &bt BT_CLR    &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Tri {
            if-layers = <1>;
            then-layer = <2>;
        };
    };
};
